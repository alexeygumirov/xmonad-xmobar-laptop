#!/bin/sh

displays="1:  
2:   
3:       
4:      
5:       
6:       
7: 來 (mirror)
8: Manual configuration"

if [ -z "${1}" ]
then
    selected=$(printf '%b' "${displays}" | rofi -dmenu -fn 'Hack Nerd Font-16' -p ' ' -l 8 -location 0 -yoffset -150 -i -theme-str 'window { width: 400px; }')
    selected_num=${selected%:*}
else
    selected_num=$1
fi

lid_state=$(cat /proc/acpi/button/lid/LID/state | cut -d':' -f2 | tr -d ' ')
primary_display="eDP-1"
hdmi_display="HDMI-1"
secondary_dp="DP-"
display_name=$(xrandr -q | grep ' connected' | grep -v "${primary_display}" | cut -d' ' -f1)

if [ -z "${display_name}" ]
then
    display_name="none"
fi


twm_update(){
    case "$XDG_SESSION_DESKTOP" in
        # Qtile has built-in hook, hence this command is not needed anymore.
        # "qtile") qtile-cmd -o cmd -f restart 2> /dev/null & ;;
        "xmonad") xmonad --restart & ;;
    esac
    nitrogen --restore --set-zoom &
}

dpms_set(){
    xset s off
    xset s noblank
    case "${1}" in
        "off") xset s off -dpms ;;
        *) xset dpms 600 1200 2400 ;;
    esac
}

default_screen(){
    if [ "${1}" = "none" ]
    then
        xrandr --output "${primary_display}" --primary --auto
    else
        xrandr --output "${primary_display}" --primary --auto --output "${1}" --off
    fi
    printf "\n" > /tmp/displaymode
    printf "default\n" >> /tmp/displaymode
    printf "" > /tmp/display_num
}

display_only(){
    local display_written=$(cat /tmp/displayname)
    local current_mode=$(tail -n1 /tmp/displaymode)
    if [ "${display_written}" != "${1}" -o "${current_mode}" != "HDMI" ]; then
        case "${1}" in
            "${hdmi_display}")
                xrandr --output "${primary_display}" --off --output "${hdmi_display}" --primary --auto
                printf "${1}" > /tmp/displayname
                ;;
            "${secondary_dp}"*)
                xrandr --output "${primary_display}" --off --output "${hdmi_display}" --off --output "${1}" --primary --auto
                printf "${1}" > /tmp/displayname
                ;;
        esac
        printf " \n" > /tmp/displaymode
        printf "HDMI\n" >> /tmp/displaymode
        printf "" > /tmp/display_num
    fi
}

case $selected_num in
    1)
        case "${lid_state}" in
            "open")
                default_screen "${display_name}"
                dpms_set
                ;;
            "closed")
                display_only "${display_name}"
                dpms_set off
                ;;
        esac
        ;;
    2)
        display_only "${display_name}"
        dpms_set off
        ;;
    3)
        case "${lid_state}" in
            "open")
                display_written=$(cat /tmp/displayname)
                current_mode=$(tail -n1 /tmp/displaymode)
                if [ "${display_written}" != "${display_name}" -o "${current_mode}" != "eDP.m-HDMI" ]; then
                    case "${display_name}" in
                        "${hdmi_display}")
                            xrandr --output "${primary_display}" --primary --auto --output "${hdmi_display}" --auto --right-of "${primary_display}"
                            printf "${display_name}" > /tmp/displayname
                            ;;
                        "${secondary_dp}"*)
                            xrandr --output "${primary_display}" --primary --auto --output "${hdmi_display}" --off --output "${display_name}" --auto --right-of "${primary_display}"
                            printf "${display_name}" > /tmp/displayname
                            ;;
                    esac
                    printf "\n" > /tmp/displaymode
                    printf "eDP.m-HDMI\n" >> /tmp/displaymode
                    printf " \n" > /tmp/display_num
                    printf " \n" >> /tmp/display_num
                fi
                dpms_set off
                ;;
            "closed")
                display_only "${display_name}"
                dpms_set off
                ;;
        esac
        ;;
    4)
        case "${lid_state}" in
            "open")
                display_written=$(cat /tmp/displayname)
                current_mode=$(tail -n1 /tmp/displaymode)
                if [ "${display_written}" != "${display_name}" -o "${current_mode}" != "HDMI-eDP.m" ]; then
                    case "${display_name}" in
                        "${hdmi_display}")
                            xrandr --output "${primary_display}" --primary --auto --output "${hdmi_display}" --auto --left-of "${primary_display}"
                            printf "${display_name}" > /tmp/displayname
                            ;;
                        "${secondary_dp}"*)
                            xrandr --output "${primary_display}" --primary --auto--output "${display_name}" --auto --left-of "${primary_display}" --output "${hdmi_display}" --off 
                            printf "${display_name}" > /tmp/displayname
                            ;;
                    esac
                    printf "\n" > /tmp/displaymode
                    printf "HDMI-eDP.m\n" >> /tmp/displaymode
                    printf " \n" > /tmp/display_num
                    printf " \n" >> /tmp/display_num
                fi
                dpms_set off
                ;;
            "closed")
                display_only "${display_name}"
                dpms_set off
                ;;
        esac
        ;;
    5)
        case "${lid_state}" in
            "open")
                display_written=$(cat /tmp/displayname)
                current_mode=$(tail -n1 /tmp/displaymode)
                if [ "${display_written}" != "${display_name}" -o "${current_mode}" != "HDMI.m-eDP" ]; then
                    case "${display_name}" in
                        "${hdmi_display}")
                            xrandr --output "${primary_display}" --auto --right-of "${hdmi_display}" --output "${hdmi_display}" --primary --auto
                            printf "${display_name}" > /tmp/displayname
                            ;;
                        "${secondary_dp}"*)
                            xrandr --output "${primary_display}" --auto --right-of "${display_name}" --output "${hdmi_display}" --off --output "${display_name}" --primary --auto 
                            printf "${display_name}" > /tmp/displayname
                            ;;
                    esac
                    printf "\n" > /tmp/displaymode
                    printf "HDMI.m-eDP\n" >> /tmp/displaymode
                    printf " \n" > /tmp/display_num
                    printf " \n" >> /tmp/display_num
                fi
                dpms_set off
                ;;
            "closed")
                display_only "${display_name}"
                dpms_set off
                ;;
        esac
        ;; 
    6)
        case "${lid_state}" in
            "open")
                display_written=$(cat /tmp/displayname)
                current_mode=$(tail -n1 /tmp/displaymode)
                if [ "${display_written}" != "${display_name}" -o "${current_mode}" != "eDP-HDMI.m" ]; then
                    case "${display_name}" in
                        "${hdmi_display}")
                            xrandr --output "${hdmi_display}" --primary --auto --output "${primary_display}" --auto --left-of "${hdmi_display}" 
                            printf "${display_name}" > /tmp/displayname
                            ;;
                        "${secondary_dp}"*)
                            xrandr --output "${display_name}" --primary --auto --output "${primary_display}" --auto --left-of "${display_name}" --output "${hdmi_display}" --off 
                            printf "${display_name}" > /tmp/displayname
                            ;;
                    esac
                    printf "\n" > /tmp/displaymode
                    printf "eDP-HDMI.m\n" >> /tmp/displaymode
                    printf " \n" > /tmp/display_num
                    printf " \n" >> /tmp/display_num
                fi
                dpms_set off
                ;;
            "closed")
                display_only "${display_name}"
                dpms_set off
                ;;
        esac
        ;; 
    7)
        case "${lid_state}" in
            "open")
                display_written=$(cat /tmp/displayname)
                current_mode=$(tail -n1 /tmp/displaymode)
                if [ "${display_written}" != "${display_name}" -o "${current_mode}" != "eDP-HDMI-Mirror" ]; then
                    case "${display_name}" in
                        "${hdmi_display}")
                            xrandr --output "${primary_display}" --primary --auto --output "${hdmi_display}" --auto --same-as "${primary_display}"
                            printf "${display_name}" > /tmp/displayname
                            ;;
                        "${secondary_dp}"*)
                            xrandr --output "${primary_display}" --primary --auto --output "${hdmi_display}" --off --output "${display_name}" --auto --same-as "${primary_display}"
                            printf "${display_name}" > /tmp/displayname
                            ;;
                    esac
                    printf "來 \n" > /tmp/displaymode
                    printf "eDP-HDMI-Mirror\n" >> /tmp/displaymode
                    printf "" > /tmp/display_num
                fi
                dpms_set off
                ;;
            "closed")
                display_only "${display_name}"
                dpms_set off
                ;;
        esac
        killall xmobar
        ;;
    8)
        arandr
        dpms_set off
        printf "?\n" > /tmp/displaymode
        printf "other\n" >> /tmp/displaymode
        printf "other" > /tmp/displayname
        printf " \n" > /tmp/display_num
        printf " \n" >> /tmp/display_num
        dpms_set off
        exit 0
        ;;
    # *)
    #     default_screen
    #     twm_update
    #     ;;
esac

twm_update
